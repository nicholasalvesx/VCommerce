@model VCommerce.Mvc.Models.OrderViewModel

@{
ViewData["Title"] = "Novo Pedido";
var customers = ViewBag.Customers as IEnumerable<CustomerViewModel> ?? new List<CustomerViewModel>();
}

<link rel="stylesheet" href="/css/order.css" asp-append-version="true" />

<div class="content-header">
    <h1 class="content-title">Novo Pedido</h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Home/Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Pedidos</a></li>
        <li class="breadcrumb-item active">Novo Pedido</li>
    </ol>
</div>

<div class="dashboard-section">
    <div class="section-header">
        <div class="section-title">
            <h2>Criar Novo Pedido</h2>
            <p>Preencha as informações para criar um novo pedido</p>
        </div>
    </div>

    <form asp-action="CreateOrder" method="post">
        <div class="create-order-container">
            <div class="card">
                <div class="card-body">
                    <h3>Cliente</h3>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="customerId">Selecionar Cliente</label>
                            <select id="customerId" name="CustomerName" class="form-control" required>
                                <option value="">Selecione um cliente...</option>
                                @foreach (var customer in customers)
                                {
                                <option value="@customer.Id">@customer.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div id="customerDetails" style="display: none;">
                        <div class="customer-info mt-3">
                            <div class="customer-avatar">
                                <span class="avatar-initials" id="customerInitials"></span>
                            </div>
                            <div class="customer-details">
                                <h4 id="customerName"></h4>
                                <p id="customerEmail"></p>
                                <p id="customerPhone"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h3>Endereço de Entrega</h3>
                    <div id="customerAddresses" style="display: none;">
                        <div class="form-group">
                            <label>Selecionar Endereço</label>
                            <select id="shippingAddressId" class="form-control">
                                <option value="">Selecione um endereço...</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label asp-for="ShippingAddress.RecipientName">Nome do Destinatário</label>
                            <input asp-for="ShippingAddress.RecipientName" class="form-control" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-9">
                            <label asp-for="ShippingAddress.Street">Rua</label>
                            <input asp-for="ShippingAddress.Street" class="form-control" required />
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="ShippingAddress.Number">Número</label>
                            <input asp-for="ShippingAddress.Number" class="form-control" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label asp-for="ShippingAddress.Complement">Complemento</label>
                            <input asp-for="ShippingAddress.Complement" class="form-control" />
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="ShippingAddress.Neighborhood">Bairro</label>
                            <input asp-for="ShippingAddress.Neighborhood" class="form-control" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label asp-for="ShippingAddress.City">Cidade</label>
                            <input asp-for="ShippingAddress.City" class="form-control" required />
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="ShippingAddress.State">Estado</label>
                            <input asp-for="ShippingAddress.State" class="form-control" required />
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="ShippingAddress.ZipCode">CEP</label>
                            <input asp-for="ShippingAddress.ZipCode" class="form-control" required />
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h3>Endereço de Cobrança</h3>
                    <div class="form-check mb-3">
                        <input type="checkbox" class="form-check-input" id="sameAsShipping" checked>
                        <label class="form-check-label" for="sameAsShipping">Mesmo que o endereço de entrega</label>
                    </div>
                    <div id="billingAddressFields" style="display: none;">
                        <div class="form-row">
                            <div class="form-group col-md-12">
                                <label asp-for="BillingAddress.RecipientName">Nome do Destinatário</label>
                                <input asp-for="BillingAddress.RecipientName" class="form-control" />
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-9">
                                <label asp-for="BillingAddress.Street">Rua</label>
                                <input asp-for="BillingAddress.Street" class="form-control" />
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="BillingAddress.Number">Número</label>
                                <input asp-for="BillingAddress.Number" class="form-control" />
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label asp-for="BillingAddress.Complement">Complemento</label>
                                <input asp-for="BillingAddress.Complement" class="form-control" />
                            </div>
                            <div class="form-group col-md-6">
                                <label asp-for="BillingAddress.Neighborhood">Bairro</label>
                                <input asp-for="BillingAddress.Neighborhood" class="form-control" />
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label asp-for="BillingAddress.City">Cidade</label>
                                <input asp-for="BillingAddress.City" class="form-control" />
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="BillingAddress.State">Estado</label>
                                <input asp-for="BillingAddress.State" class="form-control" />
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="BillingAddress.ZipCode">CEP</label>
                                <input asp-for="BillingAddress.ZipCode" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h3>Itens do Pedido</h3>
                    <div class="product-search mb-3">
                        <div class="form-row">
                            <div class="form-group col-md-10">
                                <input type="text" id="productSearch" class="form-control" placeholder="Buscar produto por nome ou SKU...">
                            </div>
                            <div class="form-group col-md-2">
                                <button type="button" id="searchProductBtn" class="btn btn-primary btn-block">
                                    <i class="fas fa-search"></i> Buscar
                                </button>
                            </div>
                        </div>
                    </div>

                    <div id="searchResults" class="mb-3" style="display: none;">
                        <h4>Resultados da Busca</h4>
                        <div class="table-responsive">
                            <table class="table table-hover" id="searchResultsTable">
                                <thead>
                                <tr>
                                    <th>Produto</th>
                                    <th>SKU</th>
                                    <th>Preço</th>
                                    <th>Estoque</th>
                                    <th>Ações</th>
                                </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-hover" id="orderItemsTable">
                            <thead>
                            <tr>
                                <th>Produto</th>
                                <th>Preço Unitário</th>
                                <th>Quantidade</th>
                                <th>Total</th>
                                <th>Ações</th>
                            </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>

                    <div id="noItemsMessage" class="alert alert-info">
                        Nenhum item adicionado ao pedido. Use a busca acima para adicionar produtos.
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h3>Informações de Pagamento</h3>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label asp-for="PaymentMethod">Método de Pagamento</label>
                            <select asp-for="PaymentMethod" class="form-control" required>
                                <option value="">Selecione...</option>
                                <option value="Cartão de Crédito">Cartão de Crédito</option>
                                <option value="Boleto Bancário">Boleto Bancário</option>
                                <option value="PIX">PIX</option>
                                <option value="Transferência Bancária">Transferência Bancária</option>
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="PaymentStatus">Status do Pagamento</label>
                            <select asp-for="PaymentStatus" class="form-control" required>
                                <option value="Aguardando Pagamento">Aguardando Pagamento</option>
                                <option value="Pago">Pago</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label asp-for="PaymentDetails">Detalhes do Pagamento</label>
                        <input asp-for="PaymentDetails" class="form-control" placeholder="Ex: 4 últimos dígitos do cartão, ID da transação, etc." />
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h3>Totais do Pedido</h3>
                    <div class="order-summary">
                        <div class="summary-item">
                            <span class="summary-label">Subtotal:</span>
                            <span class="summary-value" id="subtotalValue">R$ 0,00</span>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label asp-for="ShippingAmount">Valor do Frete</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">R$</span>
                                    </div>
                                    <input asp-for="ShippingAmount" class="form-control" id="shippingAmount" value="0.00" required />
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                <label asp-for="DiscountAmount">Valor do Desconto</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">R$</span>
                                    </div>
                                    <input asp-for="DiscountAmount" class="form-control" id="discountAmount" value="0.00" required />
                                </div>
                            </div>
                        </div>
                        <div class="summary-item grand-total">
                            <span class="summary-label">Total:</span>
                            <span class="summary-value" id="totalValue">R$ 0,00</span>
                            <input type="hidden" asp-for="TotalAmount" id="totalAmount" value="0.00" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h3>Status do Pedido</h3>
                    <div class="form-group">
                        <label asp-for="Status">Status</label>
                        <select asp-for="Status" class="form-control" required>
                            <option value="Pendente">Pendente</option>
                            <option value="Em Processamento">Em Processamento</option>
                            <option value="Enviado">Enviado</option>
                            <option value="Entregue">Entregue</option>
                            <option value="Cancelado">Cancelado</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h3>Notas e Observações</h3>
                    <div class="form-group">
                        <label asp-for="Notes">Observações</label>
                        <textarea asp-for="Notes" class="form-control" rows="4"></textarea>
                    </div>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Criar Pedido
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-times"></i> Cancelar
                </a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
<script>
    $(document).ready(function() {
        // Carregar detalhes do cliente quando selecionado
        $('#customerId').on('change', function() {
            var customerId = $(this).val();
            if (customerId) {
                // Limpar o dropdown de endereços
                $('#shippingAddressId').empty().append('<option value="">Selecione um endereço...</option>');

                // Buscar detalhes do cliente via AJAX
                $.ajax({
                    url: '@Url.Action("GetCustomerDetails", "OrdersApp")/' + customerId,
                    type: 'GET',
                    dataType: 'json',
                    success: function(data) {
                        if (data && data.customer) {
                            // Preencher detalhes do cliente
                            var customer = data.customer;
                            $('#customerInitials').text(customer.name.charAt(0));
                            $('#customerName').text(customer.name);
                            $('#customerEmail').text(customer.email);
                            $('#customerPhone').text(customer.phone);
                            $('#customerDetails').show();

                            // Preencher endereços do cliente se existirem
                            if (data.addresses && data.addresses.length > 0) {
                                $.each(data.addresses, function(i, address) {
                                    var addressText = address.street + ', ' + address.number + ' - ' + address.neighborhood;
                                    $('#shippingAddressId').append(
                                        $('<option></option>').val(address.id).text(addressText)
                                    );
                                });
                                $('#customerAddresses').show();
                            } else {
                                $('#customerAddresses').hide();
                            }
                        }
                    },
                    error: function() {
                        alert('Erro ao carregar detalhes do cliente.');
                    }
                });
            } else {
                $('#customerDetails').hide();
                $('#customerAddresses').hide();
            }
        });

        // Preencher campos de endereço quando um endereço é selecionado
        $('#shippingAddressId').on('change', function() {
            var addressId = $(this).val();
            if (addressId) {
                var selectedOption = $(this).find('option:selected');
                var addressText = selectedOption.text();

                // Buscar detalhes do endereço via AJAX
                $.ajax({
                    url: '/api/addresses/' + addressId,
                    type: 'GET',
                    dataType: 'json',
                    success: function(address) {
                        $('[name="ShippingAddress.RecipientName"]').val(address.recipientName);
                        $('[name="ShippingAddress.Street"]').val(address.street);
                        $('[name="ShippingAddress.Number"]').val(address.number);
                        $('[name="ShippingAddress.Complement"]').val(address.complement);
                        $('[name="ShippingAddress.Neighborhood"]').val(address.neighborhood);
                        $('[name="ShippingAddress.City"]').val(address.city);
                        $('[name="ShippingAddress.State"]').val(address.state);
                        $('[name="ShippingAddress.ZipCode"]').val(address.zipCode);
                    },
                    error: function() {
                        alert('Erro ao carregar detalhes do endereço.');
                    }
                });
            }
        });

        // Controle do endereço de cobrança
        $('#sameAsShipping').on('change', function() {
            if ($(this).is(':checked')) {
                $('#billingAddressFields').hide();
                copyShippingToBilling();
            } else {
                $('#billingAddressFields').show();
            }
        });

        // Copiar endereço de entrega para cobrança quando o checkbox estiver marcado
        $('[name^="ShippingAddress."]').on('change', function() {
            if ($('#sameAsShipping').is(':checked')) {
                copyShippingToBilling();
            }
        });

        function copyShippingToBilling() {
            $('[name="BillingAddress.RecipientName"]').val($('[name="ShippingAddress.RecipientName"]').val());
            $('[name="BillingAddress.Street"]').val($('[name="ShippingAddress.Street"]').val());
            $('[name="BillingAddress.Number"]').val($('[name="ShippingAddress.Number"]').val());
            $('[name="BillingAddress.Complement"]').val($('[name="ShippingAddress.Complement"]').val());
            $('[name="BillingAddress.Neighborhood"]').val($('[name="ShippingAddress.Neighborhood"]').val());
            $('[name="BillingAddress.City"]').val($('[name="ShippingAddress.City"]').val());
            $('[name="BillingAddress.State"]').val($('[name="ShippingAddress.State"]').val());
            $('[name="BillingAddress.ZipCode"]').val($('[name="ShippingAddress.ZipCode"]').val());
        }

        // Buscar produtos
        $('#searchProductBtn').on('click', function() {
            var searchTerm = $('#productSearch').val();
            if (searchTerm) {
                $.ajax({
                    url: '@Url.Action("SearchProducts", "OrdersApp")?term=' + encodeURIComponent(searchTerm),
                    type: 'GET',
                    dataType: 'json',
                    success: function(products) {
                        // Limpar resultados anteriores
                        $('#searchResultsTable tbody').empty();

                        if (products && products.length > 0) {
                            // Preencher tabela de resultados
                            $.each(products, function(i, product) {
                                var row = `
                                        <tr>
                                            <td>
                                                <div class="product-info">
                                                    <div class="product-image">
                                                        <img src="${product.imageUrl || '/placeholder.svg?height=50&width=50'}" alt="${product.name}">
                                                    </div>
                                                    <div class="product-details">
                                                        <h4>${product.name}</h4>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>${product.sku}</td>
                                            <td>R$ ${product.price.toFixed(2)}</td>
                                            <td>${product.stockQuantity}</td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-success add-product" data-product-id="${product.id}">
                                                    <i class="fas fa-plus"></i> Adicionar
                                                </button>
                                            </td>
                                        </tr>
                                    `;
                                $('#searchResultsTable tbody').append(row);
                            });

                            $('#searchResults').show();
                        } else {
                            $('#searchResultsTable tbody').append('<tr><td colspan="5" class="text-center">Nenhum produto encontrado</td></tr>');
                            $('#searchResults').show();
                        }
                    },
                    error: function() {
                        alert('Erro ao buscar produtos.');
                    }
                });
            }
        });

        // Adicionar produto ao pedido
        $(document).on('click', '.add-product', function() {
            var productId = $(this).data('product-id');

            $.ajax({
                url: '@Url.Action("GetProductById", "OrdersApp")/' + productId,
                type: 'GET',
                dataType: 'json',
                success: function(product) {
                    addProductToOrder(product);
                    $('#searchResults').hide();
                    $('#productSearch').val('');
                },
                error: function() {
                    alert('Erro ao adicionar produto.');
                }
            });
        });

        function addProductToOrder(product) {
            var rowHtml = `
                    <tr data-product-id="${product.id}">
                        <td>
                            <div class="product-info">
                                <div class="product-image">
                                    <img src="${product.imageUrl || '/placeholder.svg?height=50&width=50'}" alt="${product.name}">
                                </div>
                                <div class="product-details">
                                    <h4>${product.name}</h4>
                                    <p>SKU: ${product.sku}</p>
                                </div>
                            </div>
                            <input type="hidden" name="OrderItems[${getItemCount()}].ProductId" value="${product.id}">
                            <input type="hidden" name="OrderItems[${getItemCount()}].ProductName" value="${product.name}">
                            <input type="hidden" name="OrderItems[${getItemCount()}].ProductSku" value="${product.sku}">
                            <input type="hidden" name="OrderItems[${getItemCount()}].ProductImageUrl" value="${product.imageUrl || '/placeholder.svg?height=50&width=50'}">
                        </td>
                        <td>
                            <input type="number" name="OrderItems[${getItemCount()}].UnitPrice" class="form-control unit-price" value="${product.price.toFixed(2)}" step="0.01" min="0">
                        </td>
                        <td>
                            <input type="number" name="OrderItems[${getItemCount()}].Quantity" class="form-control quantity" value="1" min="1" max="${product.stockQuantity}">
                        </td>
                        <td>
                            <span class="item-total">R$ ${product.price.toFixed(2)}</span>
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-danger remove-item">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;

            $('#orderItemsTable tbody').append(rowHtml);
            $('#noItemsMessage').hide();

            updateOrderTotals();
        }

        function getItemCount() {
            return $('#orderItemsTable tbody tr').length;
        }

        $(document).on('change', '.unit-price, .quantity', function() {
            updateOrderTotals();
        });

        $(document).on('click', '.remove-item', function() {
            $(this).closest('tr').remove();

            if (getItemCount() === 0) {
                $('#noItemsMessage').show();
            }

            updateOrderTotals();
        });

        $('#shippingAmount, #discountAmount').on('change', function() {
            updateOrderTotals();
        });

        function updateOrderTotals() {
            let subtotal = 0;
            $('#orderItemsTable tbody tr').each(function(index) {
                const unitPrice = parseFloat($(this).find('.unit-price').val()) || 0;
                const quantity = parseInt($(this).find('.quantity').val()) || 0;
                const itemTotal = unitPrice * quantity;

                $(this).find('.item-total').text('R$ ' + itemTotal.toFixed(2));
                subtotal += itemTotal;

                $(this).find('input[name^="OrderItems["]').each(function() {
                    const name = $(this).attr('name');
                    const newName = name.replace(/OrderItems\[\d+\]/, `OrderItems[${index}]`);
                    $(this).attr('name', newName);
                });
            });

            const shippingAmount = parseFloat($('#shippingAmount').val()) || 0;
            const discountAmount = parseFloat($('#discountAmount').val()) || 0;

            const totalAmount = subtotal + shippingAmount - discountAmount;

            $('#subtotalValue').text('R$ ' + subtotal.toFixed(2));
            $('#totalValue').text('R$ ' + totalAmount.toFixed(2));
            $('#totalAmount').val(totalAmount.toFixed(2));
        }
    });
</script>
}